version: 2.1
executors:
  node14:
    docker:
      - image: circleci/node:14
    environment:
      NPM_CONFIG_PREFIX: "~/.npm-global"
    working_directory: ~/repo

orbs:
  helix-post-deploy: adobe/helix-post-deploy@3.0.0

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install latest npm
          command: sudo npm -g install npm
      - run:
          name: configure npm registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v5-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

jobs:
  build:
    executor: node14
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: Test and Code Coverage
          command: npm run test-ci
          environment:
            MOCHA_FILE: junit/test-results.xml
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

  semantic-release:
    executor: node14
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - run:
          name: import GPG key
          command: echo -e "$GPG_KEY" | gpg --import --no-tty --batch --yes
      - run:
          name: decrypt secrets
          command: gpg --no-tty --batch --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback --decrypt-files secrets/*.gpg
      - run:
          name: confgure wsk
          command: cp secrets/wskprops.env ~/.wskprops
      - helix-post-deploy/config-env
      - run:
          name: remove .npmrc
          command: rm -f ~/.npmrc
      - run:
          name: Semantic Release
          command: npm run semantic-release
      - run:
          name: Link Sequences
          command: npm run deploy-sequences

  branch-deploy:
    executor: node14
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - run:
          name: import GPG key
          command: echo -e "$GPG_KEY" | gpg --import --no-tty --batch --yes
      - run:
          name: decrypt secrets
          command: gpg --no-tty --batch --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback --decrypt-files secrets/*.gpg
      - run:
          name: confgure wsk
          command: cp secrets/wskprops.env ~/.wskprops
      - helix-post-deploy/config-env
      - run:
          name: Branch Deployment
          command: npm run deploy-ci

workflows:
  version: 2
  build:
    jobs:
      - build
      - branch-deploy:
          requires:
            - build
          filters:
            branches:
              ignore:
                - main
                - /dev\/.*/
      - semantic-release:
          requires:
            - build
          filters:
            branches:
              only: main
